-- Multi-Brand Schema Migration
-- Run this in Supabase SQL Editor to add product-aware video analysis and script versioning
-- Date: 2025-10-06

-- ============================================================================
-- PART 1: Add product columns to video_analysis table
-- ============================================================================

-- Add product_id column (nullable, references products table)
ALTER TABLE video_analysis
ADD COLUMN IF NOT EXISTS product_id UUID REFERENCES products(id) ON DELETE SET NULL;

-- Add product_adaptation column (JSONB for storing adaptation details)
ALTER TABLE video_analysis
ADD COLUMN IF NOT EXISTS product_adaptation JSONB;

-- Add indexes for performance
CREATE INDEX IF NOT EXISTS idx_video_analysis_product_id ON video_analysis(product_id);
CREATE INDEX IF NOT EXISTS idx_video_analysis_post_product ON video_analysis(post_id, product_id);

-- Add comments
COMMENT ON COLUMN video_analysis.product_id IS 'Product this analysis was generated for (optional)';
COMMENT ON COLUMN video_analysis.product_adaptation IS 'Product-specific adaptation ideas generated by AI';

-- ============================================================================
-- PART 2: Create product_scripts table for script versioning
-- ============================================================================

CREATE TABLE IF NOT EXISTS product_scripts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

    -- Relationships
    product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE,
    brand_id UUID NOT NULL REFERENCES brands(id) ON DELETE CASCADE,
    source_video_id UUID REFERENCES posts(id) ON DELETE SET NULL,
    video_analysis_id UUID REFERENCES video_analysis(id) ON DELETE SET NULL,
    parent_script_id UUID REFERENCES product_scripts(id) ON DELETE SET NULL,

    -- Script metadata
    title VARCHAR(255) NOT NULL,
    description TEXT,
    script_type VARCHAR(50) DEFAULT 'adaptation',
    status VARCHAR(50) DEFAULT 'draft',

    -- Script content
    script_content TEXT NOT NULL,
    script_structure JSONB,

    -- Production details
    estimated_duration_sec INTEGER,
    production_difficulty VARCHAR(20),
    required_props JSONB,
    required_locations JSONB,
    talent_requirements TEXT,

    -- AI generation details
    generated_by_ai BOOLEAN DEFAULT false,
    ai_model VARCHAR(100),
    ai_prompt TEXT,
    ai_generation_params JSONB,

    -- Viral pattern tracking
    source_viral_patterns JSONB,
    target_viral_score FLOAT,

    -- Version control
    version_number INTEGER DEFAULT 1,
    version_notes TEXT,
    is_current_version BOOLEAN DEFAULT true,

    -- Performance tracking
    produced_post_id UUID REFERENCES posts(id) ON DELETE SET NULL,
    actual_views INTEGER,
    actual_engagement_rate FLOAT,
    performance_vs_prediction JSONB,

    -- Timestamps
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    published_at TIMESTAMPTZ,

    -- Constraints
    CONSTRAINT valid_script_type CHECK (script_type IN ('adaptation', 'original', 'revision', 'iteration')),
    CONSTRAINT valid_status CHECK (status IN ('draft', 'review', 'approved', 'in_production', 'produced', 'published', 'archived')),
    CONSTRAINT valid_difficulty CHECK (production_difficulty IN ('easy', 'medium', 'hard'))
);

-- Indexes
CREATE INDEX IF NOT EXISTS idx_product_scripts_product_id ON product_scripts(product_id);
CREATE INDEX IF NOT EXISTS idx_product_scripts_brand_id ON product_scripts(brand_id);
CREATE INDEX IF NOT EXISTS idx_product_scripts_source_video ON product_scripts(source_video_id);
CREATE INDEX IF NOT EXISTS idx_product_scripts_video_analysis ON product_scripts(video_analysis_id);
CREATE INDEX IF NOT EXISTS idx_product_scripts_parent ON product_scripts(parent_script_id);
CREATE INDEX IF NOT EXISTS idx_product_scripts_status ON product_scripts(status);
CREATE INDEX IF NOT EXISTS idx_product_scripts_current_version ON product_scripts(is_current_version) WHERE is_current_version = true;
CREATE INDEX IF NOT EXISTS idx_product_scripts_created_at ON product_scripts(created_at DESC);

-- Auto-update timestamp function
CREATE OR REPLACE FUNCTION update_product_scripts_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger
DROP TRIGGER IF EXISTS product_scripts_updated_at ON product_scripts;
CREATE TRIGGER product_scripts_updated_at
    BEFORE UPDATE ON product_scripts
    FOR EACH ROW
    EXECUTE FUNCTION update_product_scripts_updated_at();

-- Comments
COMMENT ON TABLE product_scripts IS 'Stores script versions for product videos, including AI-generated adaptations and manual revisions';
COMMENT ON COLUMN product_scripts.parent_script_id IS 'References previous version if this is a revision';

-- ============================================================================
-- PART 3: Fix video_processing_log constraints
-- ============================================================================

-- Add unique constraint on post_id for upsert operations
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint
        WHERE conname = 'video_processing_log_post_id_key'
    ) THEN
        ALTER TABLE video_processing_log
        ADD CONSTRAINT video_processing_log_post_id_key UNIQUE (post_id);
    END IF;
END $$;

-- ============================================================================
-- VERIFICATION QUERIES
-- ============================================================================

-- Verify video_analysis columns
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'video_analysis'
  AND column_name IN ('product_id', 'product_adaptation')
ORDER BY column_name;

-- Verify product_scripts table
SELECT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_name = 'product_scripts'
) AS product_scripts_exists;

-- Count current video analyses
SELECT COUNT(*) as total_analyses FROM video_analysis;

-- Show sample product_scripts structure
SELECT column_name, data_type, is_nullable
FROM information_schema.columns
WHERE table_name = 'product_scripts'
ORDER BY ordinal_position;
